name: 'CI'

on:
  pull_request:
  push:

env:
  PHP_VERSION: 8.1
  PHPUNIT_FLAGS: "-v"

jobs:
  code-quality:
    name: "Code Quality"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: none

      - name: "Restore cache results"
        uses: actions/cache/restore@v4
        with:
          path: .cache
          key: "ci-result-cache-${{ github.run_id }}"
          restore-keys: |
            ci-result-cache-

      - name: "Restore Composer Cache"
        uses: actions/cache/restore@v4
        id: restore-composer
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock','**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: "Install Composer dependencies"
        if: steps.restore-composer.outputs.cache-hit != 'true'
        run: composer install --no-progress

      - name: "Run PHPStan"
        run: vendor/bin/phpstan analyse --error-format=github -vvv

      - name: "Run php-cs-fixer"
        run: >-
          vendor/bin/php-cs-fixer fix --diff --dry-run
          --config=.php-cs-fixer.dist.php

      - name: "Save cache results"
        uses: actions/cache/save@v4
        if: always()
        with:
          path: .cache
          key: "ci-result-cache-${{ github.run_id }}"

      - name: "Save vendor directory"
        if: steps.restore-composer.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock','**/composer.json') }}

  tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: code-quality
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@v2
        with:
          coverage: "none"
          php-version: ${{ env.PHP_VERSION }}
          tools: composer:v2

      - name: "Restore Composer Cache"
        uses: actions/cache/restore@v4
        id: restore-composer
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock','**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: "Install Composer dependencies"
        if: steps.restore-composer.outputs.cache-hit != 'true'
        run: composer install --no-progress

      - name: "Save vendor directory"
        if: steps.restore-composer.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock','**/composer.json') }}

      - name: "PHPUnit version"
        run: vendor/bin/phpunit --version

      - name: "Run tests"
        run: vendor/bin/phpunit ${{ env.PHPUNIT_FLAGS }}
